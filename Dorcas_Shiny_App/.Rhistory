install.packages(c("corrplot", "formattable", "geosphere", "googleVis", "PerformanceAnalytics", "radarchart"))
install.packages(c("revgeo", "RJSONIO"))
library(rtweet)
library(lubridate)
library(glue)
library(dplyr)
library(tidyr)
library(writexl)
library(kableExtra)
token <- create_token(app = "just_get", consumer_key = "meYdr185D2H10zf3QktURupOO",
consumer_secret = "27aCXNkQRLsgkkjZTawtYJg3F5hcfVrnq9O5i7Cc0a6U6isvCp",
access_token = "4842886883-JqikmMws6Xe3dVfJ4O0hsMstcmhMjEpdA8o4IP6",
access_secret = "02PoumaxKqQ7CaTscp5dS9uAFZSzcOzWqNSwWOm3uUZni")
suicide_tweets<- search_tweets("suicide", n=100, type="mixed")
suicide_tweets<- search_tweets("suicide", type="mixed")
suicide_tweets<- search_tweets("suicide",n=399 type="mixed")
suicide_tweets<- search_tweets("suicide",n=399, type="mixed")
suicide_tweets<- search_tweets("suicide",n=15000, type="mixed")
suicide_tweets<- search_tweets("suicide",n=10000000000, type="mixed")
shiny::runApp('GitHub/R-Ladies-Siny-App-Class')
runApp('GitHub/R-Ladies-Siny-App-Class')
install.packages(c("pvclust", "sna", "topicmodels", "twitteR"))
# get package with functions for interacting with Twitter.com
require(twitteR)
# get 1500 tweets with #aaa2011 tag, note that 1500 is the max, and it's subject to filtering and other restrictions by Twitter
aaa2011 <- searchTwitter('#rstats', n=1500)
token <- create_token(app = "just_get", consumer_key = "meYdr185D2H10zf3QktURupOO",
consumer_secret = "27aCXNkQRLsgkkjZTawtYJg3F5hcfVrnq9O5i7Cc0a6U6isvCp",
access_token = "4842886883-JqikmMws6Xe3dVfJ4O0hsMstcmhMjEpdA8o4IP6",
access_secret = "02PoumaxKqQ7CaTscp5dS9uAFZSzcOzWqNSwWOm3uUZni")
library(rtweet)
token <- create_token(app = "just_get", consumer_key = "meYdr185D2H10zf3QktURupOO",
consumer_secret = "27aCXNkQRLsgkkjZTawtYJg3F5hcfVrnq9O5i7Cc0a6U6isvCp",
access_token = "4842886883-JqikmMws6Xe3dVfJ4O0hsMstcmhMjEpdA8o4IP6",
access_secret = "02PoumaxKqQ7CaTscp5dS9uAFZSzcOzWqNSwWOm3uUZni")
# get package with functions for interacting with Twitter.com
require(twitteR)
# get 1500 tweets with #aaa2011 tag, note that 1500 is the max, and it's subject to filtering and other restrictions by Twitter
aaa2011 <- searchTwitter('#rstats', n=1500)
token <- create_token(app = "just_get", consumer_key = "meYdr185D2H10zf3QktURupOO",
consumer_secret = "27aCXNkQRLsgkkjZTawtYJg3F5hcfVrnq9O5i7Cc0a6U6isvCp",
access_token = "4842886883-JqikmMws6Xe3dVfJ4O0hsMstcmhMjEpdA8o4IP6",
access_secret = "02PoumaxKqQ7CaTscp5dS9uAFZSzcOzWqNSwWOm3uUZni")
rm(list = ls(all = TRUE))
#Install tidycovid package
#remotes::install_github("joachim-gassen/tidycovid19")
#package load
library(tidycovid19)
library(tidyverse)
library(extrafont)
library(ggthemes)
library(ggrepel)
library(plotly)
#download the data
CovData <- download_jhu_csse_covid19_data()
saveRDS(CovData, "CovData.rds")
head(CovData)
#plot
theme_set(theme_tufte())
ggplotly(
ggplot(CovData %>% filter(country == "Kenya"),
aes(x = date, y = confirmed, colour = country)) +
geom_line() +
geom_point() +
labs(y = "confirmed")
)
install.packages("tidycensus")
#Install tidycovid package
remotes::install_github("joachim-gassen/tidycovid19")
#package load
library(tidycovid19)
rm(list = ls(all = TRUE))
#Install tidycovid package
remotes::install_github("joachim-gassen/tidycovid19")
#package load
library(tidycovid19)
library(tidyverse)
library(extrafont)
library(ggthemes)
library(ggrepel)
library(plotly)
#download the data
CovData <- download_jhu_csse_covid19_data()
saveRDS(CovData, "CovData.rds")
head(CovData)
#plot
theme_set(theme_tufte())
ggplotly(
ggplot(CovData %>% filter(country == "Kenya"),
aes(x = date, y = confirmed, colour = country)) +
geom_line() +
geom_point() +
labs(y = "confirmed")
)
View(CovData)
View(CovData)
write.csv(CoCovData, "C:\Users\Dorcas\Documents\GitHub\R-Ladies-Siny-App-Class\Data\covid_data.csv")
write.csv(CoCovData, "C:\\Users\\Dorcas\\Documents\\GitHub\\R-Ladies-Siny-App-Class\\Data\\covid_data.csv")
write.csv(CovData, "C:\\Users\\Dorcas\\Documents\\GitHub\\R-Ladies-Siny-App-Class\\Data\\covid_data.csv")
write.csv(CovData, "C:\\Users\\Dorcas\\Documents\\GitHub\\R-Ladies-Siny-App-Class\\Data\\covid_data.csv")
#Loading the data
mydata<- read.csv( "C:\\Users\\Dorcas\\Documents\\GitHub\\R-Ladies-Siny-App-Class\\Data\\covid_data.csv")
View(mydata)
View(mydata)
unique(mydata$country)
#we subset the data to get only East Africa
ea_data<-filter(mydata, country %in% c('Kenya', 'Uganda', "Tanzania", "Rwanda", "Burundi"))
#check the data
head(ea_data)
tail(ea_data)
#let's create a small map
worldcountry = geojson_read("C:\\Users\\Dorcas\\Documents\\GitHub\\R-Ladies-Siny-App-Class\\Data\\/countries.geo.json", what = "sp")
library(geojsonio)
#let's create a small map
worldcountry = geojson_read("C:\\Users\\Dorcas\\Documents\\GitHub\\R-Ladies-Siny-App-Class\\Data\\/countries.geo.json", what = "sp")
View(worldcountry)
View(worldcountry)
leaflet(eadata)
leaflet(ea_data)
leaflet(ea_data) %>%
addTiles()
runApp('GitHub/R-Ladies-Siny-App-Class')
names(ea_data)
runApp('GitHub/R-Ladies-Siny-App-Class')
runApp('GitHub/R-Ladies-Siny-App-Class')
names(ea_data)
runApp('GitHub/R-Ladies-Siny-App-Class')
runApp('GitHub/R-Ladies-Siny-App-Class')
runApp('GitHub/R-Ladies-Siny-App-Class')
runApp('GitHub/R-Ladies-Siny-App-Class')
runApp('GitHub/R-Ladies-Siny-App-Class')
runApp('GitHub/R-Ladies-Siny-App-Class')
runApp('GitHub/R-Ladies-Siny-App-Class')
runApp('GitHub/R-Ladies-Siny-App-Class')
runApp('GitHub/R-Ladies-Siny-App-Class')
runApp('GitHub/R-Ladies-Siny-App-Class')
names(ea_data)
runApp('GitHub/R-Ladies-Siny-App-Class')
runApp()
runApp()
runApp('GitHub/R-Ladies-Siny-App-Class')
runApp()
runApp('GitHub/R-Ladies-Siny-App-Class')
runApp()
runApp('GitHub/R-Ladies-Siny-App-Class')
runApp('GitHub/R-Ladies-Siny-App-Class')
runApp('GitHub/R-Ladies-Siny-App-Class')
runApp()
runApp('GitHub/R-Ladies-Siny-App-Class')
runApp('GitHub/R-Ladies-Siny-App-Class')
names ea_data
names(ea_data)
runApp('GitHub/R-Ladies-Siny-App-Class')
runApp('GitHub/R-Ladies-Siny-App-Class')
names(ea_data)
runApp('GitHub/R-Ladies-Siny-App-Class')
runApp('GitHub/R-Ladies-Siny-App-Class')
names(ea_data)
runApp('GitHub/R-Ladies-Siny-App-Class')
library(shiny)
library(ggplot2)
library(plyr)
library(dplyr)
library(shinyWidgets)
library(RColorBrewer)
library(plotly)
library(leaflet)
library(readxl)
library(shinythemes)
runApp('GitHub/R-Ladies-Siny-App-Class/Dorcas_Shiny_App')
mydata<- read.csv( "C:\\Users\\Dorcas\\Documents\\GitHub\\R-Ladies-Siny-App-Class\\Data\\covid_data.csv")
ea_data<-filter(mydata, country %in% c('Kenya', 'Uganda', "Tanzania", "Rwanda", "Burundi"))
head(ea_data)
teail(ea_data)
tail(ea_data)
runApp('GitHub/R-Ladies-Siny-App-Class/Dorcas_Shiny_App')
runApp('GitHub/R-Ladies-Siny-App-Class/Dorcas_Shiny_App')
runApp('GitHub/R-Ladies-Siny-App-Class/Dorcas_Shiny_App')
runApp('GitHub/R-Ladies-Siny-App-Class/Dorcas_Shiny_App')
runApp('GitHub/R-Ladies-Siny-App-Class/Dorcas_Shiny_App')
runApp('GitHub/R-Ladies-Siny-App-Class/Dorcas_Shiny_App')
runApp('GitHub/R-Ladies-Siny-App-Class/Dorcas_Shiny_App')
runApp('GitHub/R-Ladies-Siny-App-Class/Dorcas_Shiny_App')
runApp('GitHub/R-Ladies-Siny-App-Class/Dorcas_Shiny_App')
runApp('GitHub/R-Ladies-Siny-App-Class/Dorcas_Shiny_App')
runApp('GitHub/R-Ladies-Siny-App-Class/Dorcas_Shiny_App')
View(ea_data)
names(ea_data)
runApp('GitHub/R-Ladies-Siny-App-Class/Dorcas_Shiny_App')
runApp('GitHub/R-Ladies-Siny-App-Class/Dorcas_Shiny_App')
runApp('GitHub/R-Ladies-Siny-App-Class/Dorcas_Shiny_App')
runApp('GitHub/R-Ladies-Siny-App-Class/Dorcas_Shiny_App')
runApp('GitHub/R-Ladies-Siny-App-Class/Dorcas_Shiny_App')
